import { fetchMatrix } from "@/api/matrix";
import { cookies } from "next/headers";
import React, { Suspense } from "react";
import { FaRotate, FaUsers } from "react-icons/fa6";
import MatrixSkeleton from "./_components/MatrixSkeleton";

export const metadata = {
  title: "Matrix - Arrax Space",
  description: "Generated by create next app",
};

const MatrixPage = async () => {
  // Get the token from the cookies
  const userId = cookies().get("arx_own_id")?.value;

  // Fetch matrix/slots by user id
  const matrix = await fetchMatrix(userId);

  return (
    <Suspense fallback={<MatrixSkeleton />}>
      <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3">
        {matrix?.data?.map((slot) => (
          <div
            key={slot._id}
            className="space-y-5 rounded-lg bg-[#220838] p-4 shadow-lg md:space-y-7 md:p-5"
          >
            {/* name and price part */}
            <div className="flex items-center justify-between gap-2">
              <div className="space-y-1">
                <h6 className="text-xl font-semibold md:text-2xl">
                  Slot {slot?.slotNumber}
                </h6>
                <p className="text-xs text-zinc-300">
                  Total Users: {slot?.usersCount}
                </p>
              </div>
              <div className="text-lg font-medium text-arx-primary md:text-xl">
                ${slot?.price}
              </div>
            </div>

            {/* slots part */}
            <div className="flex flex-wrap gap-3">
              {slot?.subSlots?.map((item) => (
                <div
                  key={item?._id}
                  className={`size-6 rounded-sm ${item?.isPurchased ? "bg-arx-primary" : "bg-white"}`}
                ></div>
              ))}
            </div>

            {/* recycle count part */}
            <div className="flex items-center gap-5">
              <div className="flex items-center gap-1">
                <FaUsers /> <span>{slot?.recycleUserCount}</span>
              </div>
              <div className="flex items-center gap-1">
                <FaRotate /> <span>{slot?.recycleCount}</span>
              </div>
            </div>
          </div>
        ))}
      </div>
    </Suspense>
  );
};

export default MatrixPage;
